/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, enumValidator } from './validators';
import { BaseModel } from './base-model';


export interface IApiResponse {
    code?: number;
    type?: string;
    message?: string;
}


export class ApiResponse extends BaseModel implements IApiResponse {
    code: number;
    type: string;
    message: string;

    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    constructor(values?: any) {
        super();
        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any): void {
        if (values) {
            this.code = values.code;
            this.type = values.type;
            this.message = values.message;
        }
    }

    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                code: new FormControl(this.code),
                type: new FormControl(this.type),
                message: new FormControl(this.message),
            });
        }
        return this._formGroup;
    }

    setFormGroupValues() {
        if (this._formGroup) {
            this._formGroup.controls['code'].setValue(this.code);
            this._formGroup.controls['type'].setValue(this.type);
            this._formGroup.controls['message'].setValue(this.message);
        }
    }
}

